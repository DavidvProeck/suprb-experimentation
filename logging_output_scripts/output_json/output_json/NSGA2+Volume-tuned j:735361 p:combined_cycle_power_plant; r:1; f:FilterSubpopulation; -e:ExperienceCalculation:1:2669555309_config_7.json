{"elitist": {"complexity_": 7, "error_": 0.061086063120879254, "fitness_": 88.96832079132324}, "config": {"early_stopping_delta": 0, "early_stopping_patience": -1, "matching_type": "NoneType", "n_initial_rules": 0, "n_iter": 32, "n_jobs": 1, "n_rules": 4, "random_state": "class:numpy.uint32", "rule_discovery__acceptance__beta": 1, "rule_discovery__acceptance": "class:suprb.optimizer.rule.acceptance.Variance", "rule_discovery__constraint__clip__bounds": "NoneType", "rule_discovery__constraint__clip": "class:suprb.optimizer.rule.constraint.Clip", "rule_discovery__constraint__min_range__min_range": 1e-06, "rule_discovery__constraint__min_range": "class:suprb.optimizer.rule.constraint.MinRange", "rule_discovery__constraint": "class:suprb.optimizer.rule.constraint.CombinedConstraint", "rule_discovery__fitness_objs": "tuple", "rule_discovery__fitness_objs_labels": "tuple", "rule_discovery__init__bounds": "NoneType", "rule_discovery__init__fitness": "class:suprb.rule.fitness.MooFitness", "rule_discovery__init__matching_type": "NoneType", "rule_discovery__init__model__alpha": 0.01, "rule_discovery__init__model__copy_X": true, "rule_discovery__init__model__fit_intercept": true, "rule_discovery__init__model__max_iter": "NoneType", "rule_discovery__init__model__positive": false, "rule_discovery__init__model__random_state": 42, "rule_discovery__init__model__solver": "auto", "rule_discovery__init__model__tol": 0.0001, "rule_discovery__init__model": "class:sklearn.linear_model._ridge.Ridge", "rule_discovery__init": "class:suprb.rule.initialization.MeanInit", "rule_discovery__lmbda": 36, "rule_discovery__mu": 36, "rule_discovery__mutation__matching_type": "NoneType", "rule_discovery__mutation__sigma": 2.4606949162377014, "rule_discovery__mutation": "class:suprb.optimizer.rule.mutation.Normal", "rule_discovery__n_iter": 1, "rule_discovery__n_jobs": 1, "rule_discovery__origin_generation__use_elitist": true, "rule_discovery__origin_generation": "class:suprb.optimizer.rule.origin.SquaredError", "rule_discovery__profile": false, "rule_discovery__random_state": "NoneType", "rule_discovery": "class:suprb.optimizer.rule.nsga2.nsga2.NSGA2", "solution_composition__archive": "class:suprb.optimizer.solution.archive.Elitist", "solution_composition__crossover__n": 3, "solution_composition__crossover": "class:suprb.optimizer.solution.ga.crossover.NPoint", "solution_composition__crossover_rate": 0.9, "solution_composition__elitist_ratio": 0.17, "solution_composition__init__fitness__alpha": 0.3, "solution_composition__init__fitness": "class:suprb.solution.fitness.ComplexityWu", "solution_composition__init__mixing__experience_calculation": "class:suprb.solution.mixing_model.ExperienceCalculation", "solution_composition__init__mixing__experience_weight": 1, "solution_composition__init__mixing__filter_subpopulation": "class:suprb.solution.mixing_model.FilterSubpopulation", "solution_composition__init__mixing": "class:suprb.solution.mixing_model.ErrorExperienceHeuristic", "solution_composition__init__p": 0.5, "solution_composition__init": "class:suprb.solution.initialization.RandomInit", "solution_composition__mutation": "class:suprb.optimizer.solution.ga.mutation.BitFlips", "solution_composition__mutation_rate": 0.001, "solution_composition__n_iter": 32, "solution_composition__n_jobs": 1, "solution_composition__population_size": 32, "solution_composition__random_state": "NoneType", "solution_composition__selection__k": 5, "solution_composition__selection": "class:suprb.optimizer.solution.ga.selection.Tournament", "solution_composition__warm_start": true, "solution_composition": "class:suprb.optimizer.solution.ga.base.GeneticAlgorithm", "verbose": 10}, "pool": [{"error_": 0.056687195553537385, "experience_": 3773.0, "match": {"bounds": "[[-1.0, 1.0000000000000002], [-0.29811104636397234, 0.8782892001199256], [-0.3499328025636882, 1.0], [-0.9999999999999999, 1.0]]"}, "is_fitted_": true, "model": {"coef_": "[-1.5981662991504122, -0.46858475738287, 0.23217915385970173, -0.27204683262364826]", "intercept_": 0.019828706353198777}}, {"error_": 0.026253621582450384, "experience_": 148.0, "match": {"bounds": "[[-1.0, 0.9742383958751861], [-1.0, 0.8355100382463734], [0.6418262328335212, 1.0], [0.14001453071052916, 1.0]]"}, "is_fitted_": true, "model": {"coef_": "[-2.064999054384206, -0.7783924831346406, 0.13950181003968268, -0.17419443343848365]", "intercept_": -0.26559297138325944}}, {"error_": 0.06231500837618491, "experience_": 2980.0, "match": {"bounds": "[[-1.0, 1.0000000000000002], [-0.5703091811994186, 0.9999999999999998], [-1.0, 1.0], [0.3972374665402123, 1.0]]"}, "is_fitted_": true, "model": {"coef_": "[-2.2533383957962587, -0.4169286896715713, -0.021318280351894706, -0.427773157053296]", "intercept_": 0.1477743481549903}}, {"error_": 0.06372455321374988, "experience_": 3966.0, "match": {"bounds": "[[-1.0, 0.26859019292979], [-0.6637941133642554, 0.9999999999999998], [-0.7277963667122342, 1.0], [-0.9999999999999999, 0.7270127804287032]]"}, "is_fitted_": true, "model": {"coef_": "[-2.1849917850916163, -0.42702510046790365, 0.06806985657504874, -0.24306257930321468]", "intercept_": 0.03597492496666621}}, {"error_": 0.04746604443221322, "experience_": 2312.0, "match": {"bounds": "[[-0.06032409475763756, 0.4159733134654384], [-1.0, 0.9999999999999998], [-1.0, 1.0], [-0.14868889967890425, 1.0]]"}, "is_fitted_": true, "model": {"coef_": "[-1.7476314344979345, -0.49360587713711174, 0.33931303274126934, -0.2988064521342145]", "intercept_": 0.036319001579796395}}, {"error_": 0.06616201998166414, "experience_": 2118.0, "match": {"bounds": "[[-1.0, -0.15789116773142886], [-1.0, 0.9999999999999998], [-1.0, 0.41283765162301783], [-0.8957283668247439, 1.0]]"}, "is_fitted_": true, "model": {"coef_": "[-2.4037222160349163, -0.38030543125546323, -0.0066872336107639645, -0.18215699276116107]", "intercept_": -0.06760063153771223}}, {"error_": 0.059138602905947295, "experience_": 2608.0, "match": {"bounds": "[[0.22946037981644252, 1.0000000000000002], [-1.0, 0.9999999999999998], [-1.0, 1.0], [-0.9998257193561002, 1.0]]"}, "is_fitted_": true, "model": {"coef_": "[-1.0642582088140031, -0.43403443457987706, 0.3340803353397435, -0.19244754109652795]", "intercept_": -0.23635917265631756}}], "input_space": "[[-1.0, 1.0000000000000002], [-1.0, 0.9999999999999998], [-1.0, 1.0], [-0.9999999999999999, 1.0]]"}